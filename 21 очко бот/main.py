# -*- coding: utf-8 -*-
import telebot
import datetime
from telebot import types, apihelper
import sqlite3
import config
import random
import time
import json
from light_qiwi import Qiwi, OperationType
import keyboards
import requests
import transliterate
import sys
import time
from PIL import Image


bot = telebot.TeleBot(config.bot_token)
bot2 = telebot.TeleBot('—Ç–æ–∫–µ–Ω –≤—Ç–æ—Ä–æ–≥–æ –±–æ—Ç–∞')

@bot.message_handler(commands=['start'])
def start_message(message):
	userid = str(message.chat.id)
	username = str(message.from_user.username)
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	q = q.execute('SELECT * FROM user WHERE id IS '+str(userid))
	row = q.fetchone()
	if row is None:
		q.execute("INSERT INTO user (id,balance,ref,ref_colvo,win,game,luls,status) VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')"%(userid,'0','0','0','0','0','0','–ê–∫—Ç–∏–≤–µ–Ω'))
		connection.commit()
		if message.text[7:] != '':
			if message.text[7:] != userid:
				sql = 'update user set ref = ? where id = ?'
				q.execute(sql, (message.text[7:], userid))
				connection.commit()
				sql = "update user set ref_colvo =ref_colvo + 1 where id = ?"
				q.execute(sql, (message.text[7:], ))
				connection.commit()
				bot.send_message(message.text[7:], f'–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML')
		msg = bot.send_message(message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		if row[3] == '0':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q = q.execute(f'SELECT status FROM user WHERE id = {message.chat.id}')
			botb = q.fetchone()
			#text = ''
			#keyboard = types.InlineKeyboardMarkup()
			#for i in row:
	#			text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
#			keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
#			bot.send_message(message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

			if botb[0] == '–ê–∫—Ç–∏–≤–µ–Ω':	
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)
				bot.send_message(message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)
			else:	
				pass

		else:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q = q.execute(f'SELECT status FROM user WHERE id = {message.chat.id}')
			botb = q.fetchone()
			#text = ''
			#keyboard = types.InlineKeyboardMarkup()
			#for i in row:
				#text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
			#keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
			#bot.send_message(message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

#{text}
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)
			if botb[0] == '–ê–∫—Ç–∏–≤–µ–Ω':
				bot.send_message(message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)
			else:	
				pass

@bot.message_handler(content_types=['text'])
def send_text(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	q = q.execute(f'SELECT status FROM user WHERE id = {message.chat.id}')
	botb = q.fetchone()
	if botb[0] == '–ê–∫—Ç–∏–≤–µ–Ω':
		if message.text.lower() == '/admin':
			if message.chat.id == config.admin:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text=f'üèÜ –¢–æ–ø 10 –ò–≥—Ä—ã',callback_data='—Ç–æ–ø–∏–≥—Ä—ã'),types.InlineKeyboardButton(text=f'üèÜ –¢–æ–ø 10 –†–µ—Ñ–µ—Ä–∞–ª–æ–≤',callback_data='—Ç–æ–ø–∏–≥—Ä—ã'))
				bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!</b>',parse_mode='HTML', reply_markup=keyboard)
				msg = bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
		
		elif message.text.lower() == '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
			if message.chat.id == config.admin:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ @username',callback_data='admin_search_user'))
				keyboard.add(types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID',callback_data='asdasdasdasdasd'))
				bot.send_message(message.chat.id, '<b>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É</b>',parse_mode='HTML', reply_markup=keyboard)

		elif message.text.lower() == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
			if message.chat.id == config.admin:
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				count_users = q.execute(f"SELECT count(id) from user").fetchone()[0]
				balans_users = q.execute("select sum(balance) from user").fetchone()[0]
				q.execute("SELECT balance FROM winers where id is " + str(1))
				winers = q.fetchone()
				dohod = int(balans_users) / 100 * 5
				
				bot.send_message(message.chat.id, f'''<i>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</i> <code>{count_users}</code>

	<b>–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> <code>{balans_users}</code>
	<b>–ü—Ä–∏–±—ã–ª—å:</b> <code>{winers[0]}</code>

	''',parse_mode='HTML')
				q.close()
				connection.close()

		elif message.text.lower() == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ id –∏–≥—Ä—ã')
				bot.register_next_step_handler(msg, editgame2)

		elif message.text.lower() == '—Ä–∞—Å—Å—ã–ª–∫–∞':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
				bot.register_next_step_handler(msg, send_photoorno)



		elif message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
			bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)


		elif message.text.lower() == 'üìú –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			balans_users = q.execute("select sum(game) from user").fetchone()[0]
			game_summas = q.execute("select sum(summa) from game").fetchone()[0]
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'üèÜ –¢–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤',callback_data='—Ç–æ–ø–∏–≥—Ä—ã'))
			keyboard.add(types.InlineKeyboardButton(text=f'üí¨ –ß–∞—Ç',url='https://t.me/G21_CHAT'),types.InlineKeyboardButton(text=f'üîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞',url=f'https://t.me/G21ROBOT_SUPPORT'))
			keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –õ–æ–≥–∏',url='https://t.me/G21_LOG'),types.InlineKeyboardButton(text=f'üí∏ –í—ã–ø–ª–∞—Ç—ã',url='https://t.me/joinchat/AAAAAEkD4du-oepTVNDRjA'))
			keyboard.add(types.InlineKeyboardButton(text=f'üìï –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã',url='https://telegra.ph/Dvadcat-odno-21Ochko--Pravila-08-22'))
			doc = open('info.jpg', 'rb')
			bot.send_photo(message.chat.id,doc, f'''–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—ã–≥—Ä–∞–ª–∏ {balans_users} –∏–≥—Ä –Ω–∞ —Å—É–º–º—É {game_summas} —Ä—É–±–ª–µ–π.''' ,parse_mode='HTML', reply_markup=keyboard)

		elif message.text.lower() == 'üÉè –∏–≥—Ä–∞—Ç—å':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT * FROM game where status = '1'")
			row = q.fetchall()
			keyboard = types.InlineKeyboardMarkup()
			for i in row:
				print('111')
				keyboard.add(types.InlineKeyboardButton(text=f'üîπ #Game_{i[0]} | –°—É–º–º–∞ {i[1]}—Ä',callback_data=f'game_{i[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='üóÇ –ú–æ–∏ –∏–≥—Ä—ã',callback_data='–º–æ–∏–∏–≥—Ä—ã'),types.InlineKeyboardButton(text='‚ôªÔ∏è –û–±–Ω–æ–≤–∏—Ç—å',callback_data='–æ–±–Ω–æ–≤–∏—Ç—å'))
			keyboard.add(types.InlineKeyboardButton(text='‚úîÔ∏è –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É',callback_data='newgame'))
			doc = open('game.jpg', 'rb')
			bot.send_photo(message.chat.id,doc, f'''‚ôªÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:''' ,parse_mode='HTML', reply_markup=keyboard)


		elif message.text.lower() == '/top':
			if message.chat.id == message.chat.id:
						ids = []
						game = []
						win = []
						luls = []
						connection = sqlite3.connect('database.sqlite')
						with connection:
							cur = connection.cursor()
							keyboard = types.InlineKeyboardMarkup()
							cur.execute("SELECT * FROM user ORDER BY game DESC")
							row = cur.fetchall()
							for i in row:
									game.append(i[5])
									ids.append(i[0])
									win.append(i[4])
									luls.append(i[6])
							x = 0
							for ro,ror,rooo,roooo  in zip(ids,game,win,luls):
								x += 1
								if x <= 10:
									userid = ro
									UsrInfo = bot.get_chat_member(userid, userid).user
									keyboard.add(types.InlineKeyboardButton(text = f'‚ÑπÔ∏è {str(UsrInfo.first_name)} |üïπ {str(ror)} |üèÜ {str(rooo)} |‚òπÔ∏è {str(roooo)}', url = f"t.me/{str(UsrInfo.username)}"))
						keyboard.add(types.InlineKeyboardButton(text = f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = f"–Ω–∞–∑–∞–¥–∏–Ω—Ñ–æ"))			
						bot.send_message(message.chat.id, "‚ÑπÔ∏è –ò–º—è |üïπ –ò–≥—Ä—ã |üèÜ –ü–æ–±–µ–¥—ã |‚òπÔ∏è –ü—Ä–æ–∏–≥—Ä—ã—à–∏ ", reply_markup = keyboard)
						
		elif message.text.lower() == 'üñ• –∫–∞–±–∏–Ω–µ—Ç':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT balance FROM user where id is " + str(message.chat.id))
			balanss = q.fetchone()
			q.execute("SELECT ref_colvo FROM user where id is " + str(message.chat.id))
			ref_colvo = q.fetchone()
			q.execute("SELECT win FROM user where id is " + str(message.chat.id))
			win = q.fetchone()
			q.execute("SELECT luls FROM user where id is " + str(message.chat.id))
			luls = q.fetchone()
			q.execute("SELECT game FROM user where id is " + str(message.chat.id))
			game = q.fetchone()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚öúÔ∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',callback_data='awhat_oplata'),types.InlineKeyboardButton(text='‚öúÔ∏è –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤',callback_data='–≤—ã–≤–æ–¥–±–∞–ª–∞–Ω—Å–∞'))
			keyboard.add(types.InlineKeyboardButton(text='üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',callback_data='—Ä–µ—Ñ—Å–∏—Å—Ç–µ–º–∞'))
			doc = open('cab.jpg', 'rb')
			bot.send_photo(message.chat.id,doc, f'''üßü‚Äç‚ôÇ id: <code>{message.chat.id}</code>
üí∞ –ë–∞–ª–∞–Ω—Å: <code>{balanss[0]}</code>

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:

‚ûñ –ò–≥—Ä—ã: <code>{game[0]}</code>
‚ûñ –ü–æ–±–µ–¥—ã: <code>{win[0]}</code>
‚ûñ –ü—Ä–æ–≥—Ä—ã—à–∏: <code>{luls[0]}</code>


''',parse_mode='HTML', reply_markup=keyboard)

		elif message.text.lower() == '–Ω–∞–∑–∞–¥':
			msg = bot.send_message(message.chat.id, '<b>–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥</b>',parse_mode='HTML', reply_markup=keyboards.main)
	else:	
		pass


def editgame2(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM game where id = '{message.text}'")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML', reply_markup=keyboards.admin)
		if row != None:
			keyboard = types.InlineKeyboardMarkup()
			userid = row[2]
			UsrInfo = bot.get_chat_member(userid, userid).user
			userid1 = row[3]
			UsrInfo1 = bot.get_chat_member(userid1, userid1).user
			keyboard.add(types.InlineKeyboardButton(text=f'–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–Ω–∫',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–±–∞–Ω–∫_{row[0]}'),types.InlineKeyboardButton(text=f'–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫_{row[0]}'))
			bot.send_message(message.chat.id, f'''@{UsrInfo.username} (–±–∞–Ω–∫):{row[14]} vs @{UsrInfo1.username} :{row[16]}
C—É–º–º–∞: {row[1]}''',parse_mode='HTML', reply_markup=keyboard)
		else:
			print('2')	

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def add_money1(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      global textt
      textt = message.text
      msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
      bot.register_next_step_handler(msg, add_money2)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def add_money2(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      connection = sqlite3.connect('database.sqlite')
      q = connection.cursor()
      q.execute("update user set balance = balance +" + str( message.text ) +  " where id =" + str(id_user_edit_bal1))
      connection.commit()
      msg = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_phone(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set qiwi_phone = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_token(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set qiwi_token = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def editgame(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update game set bank_summa = '"+str(message.text)+f"' where id = '{idgames}'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def editgames(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update game set protivnik_summa = '"+str(message.text)+f"' where id = '{idgames1}'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def idviplatauser(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		bot.send_message(idviplata, f'''<b>#–≤—ã–ø–ª–∞—Ç–∞</b>

{message.text}''',parse_mode='HTML', reply_markup=keyboards.admin)
		bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def qiwi_viplata(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	if message.text.isdigit() == True:
		q = q.execute("SELECT balance FROM user WHERE id = "+str(message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(message.text):
				ref_prozent = '5'
				add_ref_money = int(message.text)/100*int(ref_prozent)
				sum_vivod = int(message.text) - int(add_ref_money)
				q.execute("update user set balance = balance - "+str(message.text)+" where id = " + str(message.chat.id))
				connection.commit()
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–í—ã–ø–ª–∞—Ç–∏—Ç—å',callback_data=f'–≤—ã–ø–ª–∞—Ç–∞_{message.chat.id}'))
				bot.send_message(config.admin, f'#–í—ã–≤–æ–¥\n\n–ó–∞–∫–∞–∑–∞–Ω–∞ –≤—ã–ø–ª–∞—Ç–∞!\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç—å: <a href="tg://user?id={message.chat.id}">{message.from_user.first_name}</a>\n–ò–¥: <code>'+str(message.chat.id)+'</code>\n–°—É–º–º–∞: <code>'+str(sum_vivod)+' </code>—Ä—É–±',parse_mode='HTML',reply_markup=keyboard)
				bot.send_message(message.chat.id, f'''<b>‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>

<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>

<b>‚ûñ –°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã:</b> <code>{sum_vivod}</code> <b>RUB (—Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏)</b>
''',reply_markup=keyboards.main, parse_mode='HTML')

def send_photoorno(message):
	global text_send_all
	text_send_all = message.text
	msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:\n\n–°—Å—ã–ª–∫–∞ –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç –∫–Ω–æ–ø–∫–∞\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É</b>\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–ù–µ—Ç"',parse_mode='HTML')
	bot.register_next_step_handler(msg, admin_send_message_all_text_rus)

def admin_send_message_all_text_rus(message):
		global photoo
		global keyboar
		global v
		try:
			photoo = message.text.split('\n')[1]
			keyboar = message.text.split('\n')[0]
			v = 0
			if str(photoo.lower()) != '–ù–µ—Ç'.lower():
				v = v+1
				
			if str(keyboar.lower()) != '–ù–µ—Ç'.lower():
				v = v+2

			if v == 0:
				msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML')
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
			
			elif v == 1:
				msg = bot.send_photo(message.chat.id,str(photoo), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML')
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

			elif v == 2:
				keyboard = types.InlineKeyboardMarkup(row_width=1)
				keyboard.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏',url=f'{keyboar}'))
				msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML',reply_markup=keyboard)
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

			elif v == 3:
				keyboard = types.InlineKeyboardMarkup(row_width=1)
				keyboard.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏',url=f'{keyboar}'))
				msg = bot.send_photo(message.chat.id,str(photoo), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML',reply_markup=keyboard)
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
		except:
			bot.send_message(message.chat.id, '–ê—Ä–≥—É–º–µ–Ω—Ç—ã —É–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!')	


def admin_send_message_all_text_da_rus(message):
	otvet = message.text
	colvo_send_message_users = 0
	colvo_dont_send_message_users = 0
	if message.text.lower() == '–î–∞'.lower():
		connection = sqlite3.connect('database.sqlite')
		with connection:	
			q = connection.cursor()
			bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å!')
			if v == 0:
				q.execute("SELECT * FROM user")
				row = q.fetchall()
				for i in row:
					jobid = i[0]
					time.sleep(0.2)
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendMessage"),
						data={'chat_id': jobid, 'text': str(text_send_all),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	
			elif v == 1:
				q.execute("SELECT * FROM user")
				row = q.fetchall()
				for i in row:
					jobid = i[0]


					time.sleep(0.1)
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendPhoto"),
						data={'chat_id': jobid,'photo': str(photoo), 'caption': str(text_send_all),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	

			elif v == 2:
				q.execute("SELECT * FROM user")
				row = q.fetchall()
				for i in row:
					jobid = i[0]

					time.sleep(0.1)
					reply = json.dumps({'inline_keyboard': [[{'text': '‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç', 'callback_data': f'restart'}]]})
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendMessage"),
						data={'chat_id': jobid, 'text': str(text_send_all), 'reply_markup': str(reply),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	
			elif v == 3:
				q.execute("SELECT * FROM user")
				row = q.fetchall()
				for i in row:
					jobid = i[0]

					time.sleep(0.1)
					reply = json.dumps({'inline_keyboard': [[{'text': '‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç', 'callback_data': f'restart'}]]})
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendPhoto"),
						data={'chat_id': jobid,'photo': str(photoo), 'caption': str(text_send_all),'reply_markup': str(reply),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	


	elif message.text == '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("delete from dep WHERE id_user = " + str(message.chat.id))
		connection.commit()
		q.close()
		connection.close()
		bot.send_message(message.chat.id, "–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é", reply_markup=keyboards.main)


def adminsendmessage(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		bot.send_message(iduserasend, str(message.text),parse_mode='HTML')
		bot.send_message(message.chat.id, '<b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.admin)

def btc_oplata(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			price = int(message.text)
			if str(price).isdigit() == True:
				if int(price) < 100:
					msg = bot.send_message(message.chat.id, 'C—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ–Ω—å—à–µ 100 —Ä—É–±')
					bot.register_next_step_handler(msg, btc_oplata)
				else:
					msg = bot.send_message(message.chat.id, f"<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ BTC –ß–ï–ö –Ω–∞ —Å—É–º–º—É:{message.text}</b>", reply_markup=keyboards.main, parse_mode='HTML')
					bot.register_next_step_handler(msg, btc_oplata_1)

			else:
				msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —Ü–µ–ª–æ–µ-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ\n\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ')
				bot.register_next_step_handler(msg, btc_oplata)
		except ValueError:
			msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —Ü–µ–ª–æ–µ-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ\n\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ')
			bot.register_next_step_handler(msg, btc_oplata)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def searchuser(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM user where name = '{message.text}'")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML', reply_markup=keyboards.admin)
		if row != None:
			
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚úâ –ù–∞–ø–∏—Å–∞—Ç—å',callback_data=f'–Ω–∞–ø–∏—Å–∞—Ç—å—é–∑–µ—Ä—É_{row[0]}'),types.InlineKeyboardButton(text='‚úîÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'),types.InlineKeyboardButton(text='üîì –†–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'),types.InlineKeyboardButton(text='‚ûñ –°–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'—Å–Ω—è—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'))
			msg = bot.send_message(message.chat.id, f'''<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>

<b>username:</b> <b>@{row[1]}</b>
<b>–ò–¥:</b> <code>{row[0]}</code>
<b>–†–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> <code>{row[4]}</code>
<b>–ë–∞–ª–∞–Ω—Å:</b> <code>{row[2]}</code>
<b>–û—Ç–ø—Ä–∞–≤–∏–ª:</b> <code>{vsegosms[0]}</code>
<b>–ü—Ä–∞–π—Å —Å–º—Å:</b> <code>{row[5]}</code>
<b>–ü—Ä–∞–π—Å –ø—Ä–æ–∑–≤–æ–Ω–∞:</b> <code>{row[6]}</code>
<b>–°—Ç–∞—Ç—É—Å:</b> <code>{row[7]}</code>
''',parse_mode='HTML',reply_markup=keyboard)
		else:
			bot.send_message(message.chat.id, '<b>–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.admin)

def qiwi_viplata11111(message):
	qiwi_user = message.text
	if message.text != 'üî∂ –û—Ç–º–µ–Ω–∏—Ç—å':
		if qiwi_user[:1] == '7' and len(qiwi_user) == 11 or qiwi_user[:3] == '380' and len(qiwi_user[3:]) == 9 or qiwi_user[:3] == '375' and len(qiwi_user) <= 12:
			if qiwi_user.isdigit() == True:
				global numberphone
				numberphone = message.text
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã')
				bot.register_next_step_handler(msg, summa_vilata_qiwi)
			else:
				bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–æ—à–µ–ª–µ–∫!',reply_markup=keyboards.main)
		else:
			msg = bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–æ—à–µ–ª–µ–∫!')

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def summa_vilata_qiwi(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	if message.text.isdigit() == True:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balance FROM user WHERE id = "+str(message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(message.text):
				ref_prozent = '5'
				add_ref_money = int(message.text)/100*int(ref_prozent)
				sum_vivod = int(message.text) - int(add_ref_money)
				print(sum_vivod)
				q.execute("update user set balance = balance - "+str(message.text)+" where id = " + str(message.chat.id))
				connection.commit()
				rand = random.randint(1,999999999)
				q.execute("INSERT INTO viplata (id,summa,user,qiwi) VALUES ('%s','%s', '%s', '%s')"%(rand,sum_vivod,message.chat.id,numberphone))
				connection.commit()

				bot.send_message(-1001428771225, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>

<b>üí∞ –°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã:</b> <code>{sum_vivod}</code>
<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>''', parse_mode='HTML')


				bot.send_message(message.chat.id, f'''<b>‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>

<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>

<b>‚ûñ –°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã:</b> <code>{sum_vivod}</code> <b>RUB (—Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏)</b>

<b>‚ûñ –†–µ–∫–≤–∏–∑–∏—Ç—ã:</b>  <code>{numberphone}</code>


''',reply_markup=keyboards.main, parse_mode='HTML')
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–í—ã–ø–ª–∞—Ç–∏—Ç—å',callback_data=f'–≤—ã–ø–ª–∞—Ç–∏—Ç—å_{rand}'))
				bot.send_message(config.admin, f'''<b>‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>

<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>

<b>‚ûñ –°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã:</b> <code>{sum_vivod}</code> <b>RUB (—Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏)</b>

<b>‚ûñ –†–µ–∫–≤–∏–∑–∏—Ç—ã:</b>  <code>{numberphone}</code>

<code>{message.chat.id}</code>


''',reply_markup=keyboard, parse_mode='HTML')

def searchuser_id(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM user where id = '{message.text}'")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML', reply_markup=keyboards.admin)
		if row != None:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚úâ –ù–∞–ø–∏—Å–∞—Ç—å',callback_data=f'–Ω–∞–ø–∏—Å–∞—Ç—å—é–∑–µ—Ä—É_{row[0]}'),types.InlineKeyboardButton(text='‚úîÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'),types.InlineKeyboardButton(text='üîì –†–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'),types.InlineKeyboardButton(text='‚ûñ –°–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'—Å–Ω—è—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'))
			msg = bot.send_message(message.chat.id, f'''<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>

<b>–ò–¥:</b> <code>{row[0]}</code>
<b>–†–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> <code>{row[3]}</code>
<b>–ë–∞–ª–∞–Ω—Å:</b> <code>{row[1]}</code>
<b>–ò–≥—Ä—ã:</b> <code>{row[5]}</code>
<b>–í—ã–π–≥—Ä–∞–ª:</b> <code>{row[4]}</code>
<b>–ü—Ä–æ–∏–≥—Ä–∞–ª:</b> <code>{row[6]}</code>
<b>–°—Ç–∞—Ç—É—Å:</b> <code>{row[7]}</code>
''',parse_mode='HTML',reply_markup=keyboard)
		else:
			bot.send_message(message.chat.id, '<b>–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.admin)


def btc_oplata_1(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if "https://telegram.me/BTC_CHANGE_BOT?" in str(message.text):
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',callback_data=f'good_oplata_btc_{message.chat.id}'))
			bot.send_message(message.chat.id, '‚ôªÔ∏è –ü–ª–∞—Ç–µ–∂ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –≤—Ä–µ–º—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è 5-30 –º–∏–Ω—É—Ç')
			bot.send_message(config.admin, f'#–ù–û–í–´–ô–ß–ï–ö \n<a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a> \n {message.text}',parse_mode='HTML', reply_markup=keyboard)

		else:
			bot.send_message(message.chat.id, f'‚öí –ß–µ–∫ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.main)

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def user_id_balance11(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		print(user_id_balance)
		q.execute(f"update user set balance = balance + {message.text} where id = {user_id_balance}")
		connection.commit()
		today = datetime.datetime.today()
		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ', reply_markup=keyboards.admin)
		bot.send_message(user_id_balance, '–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.admin)

def newgame(message):
	summagame = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			if int(summagame) >= int(10):
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q = q.execute("SELECT balance FROM user WHERE id = "+str(message.chat.id))
				check_balans = q.fetchone()
				if float(check_balans[0]) >= int(summagame):
					q.execute("update user set balance = balance - "+str(summagame)+" where id = " + str(message.chat.id))
					connection.commit()
					rand = random.randint(1,999999999)
					q.execute("INSERT INTO game (id,summa,bank,protivnik,k2,k3,k4,k7,k8,k9,k10,k11,status,bank_colvo,bank_summa,protivnik_colvo,protivnik_summa,rezultat) VALUES ('%s','%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')"%(rand,summagame,message.chat.id,'0','4','4','4','4','4','4','4','4','1','0','0','0','0','0'))
					connection.commit()
					dohodss = int(summagame) / 100 * 4
					q.execute("update winers set balance = balance + "+str(dohodss)+" where id = " + str(1))
					connection.commit()
					bot2.send_message(-1001386797138, f'‚ôªÔ∏è –ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞ {summagame}—Ä.', parse_mode='HTML')
					bot.send_message(message.chat.id, 'üÉè –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, –∂–¥–∏—Ç–µ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞.', parse_mode='HTML', reply_markup=keyboards.main)
				else:
					bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '–°—É–º–º–∞ –∏–≥—Ä—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 10 —Ä—É–±–ª–µ–π', reply_markup=keyboards.main)	
		except:
			bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)
@bot.callback_query_handler(func=lambda call:True)
def podcategors(call):

	if call.data[:12] == 'awhat_oplata':
		what_oplata = types.InlineKeyboardMarkup(row_width=2)
		what_oplata_qiwi = types.InlineKeyboardButton(text='ü•ù Qiwi', callback_data='Depoziit_qiwi')
		what_oplataa_crypta = types.InlineKeyboardButton(text='üí≤ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data='crypt_oplata')
		what_oplataa_btc = types.InlineKeyboardButton(text='üéÅ BTC –ß–ï–ö', callback_data='btc_oplata')
		what_oplata.add(what_oplataa_crypta,what_oplata_qiwi,what_oplataa_btc)
		bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞', reply_markup=what_oplata)

	if call.data == 'crypt_oplata':
		bot.send_message(call.from_user.id,  'üëÅ‚Äçüó® –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ')

	if call.data[:12] == 'btc_oplata':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.from_user.id,  'üëÅ‚Äçüó® –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\nüíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - 100 —Ä—É–±', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, btc_oplata)


	if call.data[:13] == 'Depoziit_qiwi':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å',callback_data='Check_Depozit_qiwi_'))
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT qiwi_phone FROM config where id = '1'")
		qiwi_phone = q.fetchone()
		qiwi_oplata_url = "https://qiwi.com/payment/form/99?extra['account']="+str(qiwi_phone[0])+"&extra['comment']="+str(call.message.chat.id)+"&amountInteger=50&amountFraction=0&currency=643&blocked[1]=account&blocked[2]=comment"
		keyboard.add(types.InlineKeyboardButton(text='üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ',url=qiwi_oplata_url))
		bot.send_message(call.message.chat.id, "üì• <b>–î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ QIWI –∫–æ—à–µ–ª—ë–∫, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É —Å—Ä–µ–¥—Å—Ç–≤ (–º–∏–Ω–∏–º—É–º </b><code>50</code><b> —Ä—É–±) –Ω–∞ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–∏–∂–µ, –æ—Å—Ç–∞–≤–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–µ—Ä–µ–≤–æ–¥–∞:\n\nüí≥ –ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:</b> <code>%s</code>\nüí¨ <b>–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä–µ–≤–æ–¥—É:</b> <code>%s</code>" % (str(qiwi_phone[0]), str(call.message.chat.id)),parse_mode='HTML', reply_markup=keyboard)
		bot.send_message(call.message.chat.id, '‚ö†Ô∏è  –î–µ–ø–æ–∑–∏—Ç –º–µ–Ω—å—à–µ 50—Ä = –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–æ–µ–∫—Ç—É !, –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ "‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å" ')

	if call.data[:19] == 'Check_Depozit_qiwi_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT qiwi_phone FROM config where id = 1")
		qiwi_phone = str(q.fetchone()[0])
		q.execute("SELECT qiwi_token FROM config where id = 1")
		qiwi_token = str(q.fetchone()[0])
		for payment in Qiwi(qiwi_token,qiwi_phone).get_payments(10, operation=OperationType.IN):
			q = q.execute('SELECT id FROM temp_pay WHERE txnid = ' + str(payment.raw['txnId']))
			temp_pay = q.fetchone()
			if 'RUB' in str(payment.currency) and str(payment.comment) == str(call.message.chat.id) and temp_pay == None and float(payment.amount) >= 50:
				q.execute("INSERT INTO temp_pay (txnid) VALUES ('%s')"%(payment.raw['txnId']))
				connection.commit()
				bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("update user set balance = balance + "+str(payment.amount)+" where id = " + str(call.message.chat.id))
				connection.commit()
				
				today = datetime.datetime.today()
				q.execute("select ref from user where Id = " + str(call.message.chat.id))
				ref_user1 = q.fetchone()[0]
				if ref_user1 != '':
					add_deposit = int(payment.amount) / 100 * 0.1
					bot.send_message(ref_user1, f'–†–µ—Ñ–µ—Ä–∞–ª –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –∏ –≤–∞–º –∑–∞—á–∏—Å–ª–∏–Ω–Ω–æ {add_deposit} RUB',parse_mode='HTML')

				bot.send_message(config.admin, "<b>–ù–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç!</b>\nId –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + str(call.message.chat.id)+"\n–°—É–º–º–∞: " + str(payment.amount),parse_mode='HTML')
				bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ "+str(payment.amount) +' —Ä—É–±')
				break
			else:
				bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

	elif call.data == 'edit_praces':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT rules FROM user  where id = "+str(call.message.chat.id))
		sms_prace = q.fetchone()
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()

		keyboard.add(types.InlineKeyboardButton(text=f'VIP | 1000—Ä',callback_data='vip_1'),types.InlineKeyboardButton(text=f'Premium | 10000—Ä',callback_data='vip_3'))
		keyboard.add(types.InlineKeyboardButton(text=f'VIP+ | 5000—Ä',callback_data='vip_2'),types.InlineKeyboardButton(text=f'Premium+ | 30000—Ä',callback_data='vip_4'))
		bot.send_message(call.message.chat.id, f'''‚ûñ VIP: —Ü–µ–Ω–∞ —Å–º—Å 12—Ä
‚ûñ VIP+: —Ü–µ–Ω–∞ —Å–º—Å 10—Ä
‚ûñ Premium: —Ü–µ–Ω–∞ —Å–º—Å 7—Ä
‚ûñ Premium+: —Ü–µ–Ω–∞ —Å–º—Å 5—Ä

‚ö†Ô∏è –í—Å–µ —Ç–∞—Ä–∏—Ñ—ã –ø–æ–¥–∫–ª—é—á–∞—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Å—á–µ—Ç—É.''' ,parse_mode='HTML', reply_markup=keyboard)

	elif call.data == 'vip_1':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(1000):
			q.execute("update user set rules = " + str(12) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == 'vip_2':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(5000):
			q.execute("update user set rules = " + str(10) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == 'vip_3':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(10000):
			q.execute("update user set rules = " + str(7) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == 'vip_4':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(30000):
			q.execute("update user set rules = " + str(5) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == '—à–∞–±–ª–æ–Ω—ã':
			bot.send_message(call.message.chat.id, f'''–ê–≤–∏—Ç–æ.—Ä—É —Å—Å—ã–ª–∫–∞ –ø—Ä—è–º–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:

–í–∞—à —Ç–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω! –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏:

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–¥–µ–ª–∫—É —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º:

–£–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥/—Å:

–í–∞—à —Ç–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω! –°—Å—ã–ª–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å–¥–µ–ª–∫–∏:

–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:

–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞:

–ü–æ–∫—É–ø–∫–∞ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å–¥–µ–ª–∫—É:

–ù–∞ –í–∞—à–µ –∏–º—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Ññ7542916.
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ–ø–ª–∞—Ç–∞:

–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞! –°—Å—ã–ª–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤:

–í–∞—à —Ç–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω! –ü–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω—å–≥–∏ —Å –ø—Ä–æ–¥–∞–∂–∏:''' ,parse_mode='HTML')


	elif call.data == '—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup(row_width=1)
		keyboard.add(types.InlineKeyboardButton(text='üî∏ Life | 0—Ä',callback_data=f'—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ª–∏—Ñ–µ'),types.InlineKeyboardButton(text='üîπ Premium | 5—Ä',callback_data=f'—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ø—Ä–µ–º–∏—É–º'))
		bot.send_message(call.message.chat.id, '''<b>‚ôªÔ∏è –ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:</b> 

üîπ Premium:		
<code>0Ô∏è‚É£ https://oplata.uno/2ywn1
1Ô∏è‚É£ https://oplata.live/l559d
2Ô∏è‚É£ https://dostavim.live/ssgkw
2Ô∏è‚É£ https://dostavim.world/ssgkw</code>
üî∏ Life:
<code>‚ö† –ù–ï –î–û–°–¢–£–ü–ù–û</code>
''',parse_mode='HTML', reply_markup=keyboard)
		#bot.answer_callback_query(callback_query_id=call.id, text="‚ö† –ù–ï –î–û–°–¢–£–ü–ù–û")

	elif call.data == '—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ª–∏—Ñ–µ':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>https://yandex.ru/</code>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,generator_url)

	elif call.data == '—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ø—Ä–µ–º–∏—É–º':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(5):
			msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>https://yandex.ru/</code>',parse_mode='HTML', reply_markup=keyboards.otmena)
			bot.register_next_step_handler(msg,generator_url_1)
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data[:14] == '–Ω–∞–ø–∏—Å–∞—Ç—å—é–∑–µ—Ä—É_':
		global iduserasend
		iduserasend = call.data[14:]
		msg=bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, adminsendmessage)

	elif call.data == 'svoi_text':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b> \n\n–ú–∞–∫—Å–∏–º—É–º 120 —Å–∏–º–≤–æ–ª–æ–≤',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,svoi_text)

	elif call.data == 'svoi_textvip':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b> \n\n–ú–∞–∫—Å–∏–º—É–º 160 —Å–∏–º–≤–æ–ª–æ–≤',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,svoi_textvip)

	elif call.data == '—Ä–µ—Ñ—Å–∏—Å—Ç–µ–º–∞':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT balance FROM user where id is " + str(call.message.chat.id))
		balanss = q.fetchone()
		q.execute("SELECT ref_colvo FROM user where id is " + str(call.message.chat.id))
		ref_colvo = q.fetchone()
		q.execute("SELECT win FROM user where id is " + str(call.message.chat.id))
		win = q.fetchone()
		q.execute("SELECT luls FROM user where id is " + str(call.message.chat.id))
		luls = q.fetchone()
		q.execute("SELECT game FROM user where id is " + str(call.message.chat.id))
		game = q.fetchone()
		doc = open('ref.jpg', 'rb')
		bot.send_photo(call.message.chat.id,doc, f'''üë•–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

‚ñ´Ô∏è–ß—Ç–æ —ç—Ç–æ?
–ù–∞—à–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏—à—å –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ 5% –æ—Ç –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –≤ –±–æ—Ç–µ

üìØ–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
https://t.me/{config.bot_name}?start={call.message.chat.id}

–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ {ref_colvo[0]}''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data == 'svoi_text_prozvon':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b> \n\n–ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,svoi_text_prozvon)

	elif call.data == '—É–∑–Ω–∞—Ç—å_—Å—Ç–∞—Ç—É—Å':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ id –∑–≤–æ–Ω–∫–∞:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,poisk_status)

	elif call.data == '—É–∑–Ω–∞—Ç—å_—Å—Ç–∞—Ç—É—Å_sms':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ id —Å–º—Å:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,poisk_status_sms)

	elif call.data[:16] == 'good_oplata_btc_':
		global user_id_balance
		user_id_balance = call.data[16:]
		#bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,user_id_balance11)

	elif call.data == "vau":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚ûï –°–æ–∑–¥–∞—Ç—å',callback_data=f'vau_add'),types.InlineKeyboardButton(text=' ‚úîÔ∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'vau_good'))
		bot.send_message(call.message.chat.id, "<b>–ß—Ç–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?</b>",parse_mode='HTML', reply_markup=keyboard)


	elif call.data == "vau_add":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT balans FROM user where id is " + str(call.message.chat.id))
		balanss = q.fetchone()
		msg = bot.send_message(call.message.chat.id, f'''–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É RUB –≤—ã–ø–∏—Å–∞—Ç—å –í–∞—É—á–µ—Ä ? (–ï–≥–æ —Å–º–æ–∂–µ—Ç –æ–±–Ω–∞–ª–∏—á–∏—Ç—å –ª—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∑–Ω–∞—é—â–∏–π –∫–æ–¥).

–î–æ—Å—Ç—É–ø–Ω–æ: {balanss[0]} RUB''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vau_add)

	elif call.data == "vau_good":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞—É—á–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–æ–¥:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vau_good)

	elif call.data == "–ø—Ä–æ–±–∏—Ç—å_–Ω–æ–º–µ—Ä":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>79999999999</code>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, probiv_number)

	elif call.data[:16] == 'restart':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		bot.send_message(call.message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)


	elif call.data == 'buy_reklama':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'‚úîÔ∏è –°–æ–≥–ª–∞—Å–µ–Ω, –∫—É–ø–∏—Ç—å| 500 RUB',callback_data=f'yes_buy_reklama'))
		bot.send_message(call.message.chat.id, '''<b>–í –≤–∏—Ç—Ä–∏–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è 5 –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.
–î–æ–±–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞, –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –ø–µ—Ä–≤–æ–π, –∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞.

–°—Å—ã–ª–∫—É —É–≤–∏–¥—è—Ç:
‚ûñ–í –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ. 
‚ûñ–ü—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–µ. 
‚ûñ–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π. 
‚ûñ–í –≤—ã–±–æ—Ä–µ —Å–µ—Ä–≤–∏—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.</b>''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data == 'yes_buy_reklama':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, yes_buy_reklama)

	elif call.data == "–∞–≤–∏—Ç–æ_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=av&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data == "—Ç–µ–ª–µ–≥—Ä–∞–º_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=tg&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data == "–≤–∞—Ç—Å–∞–ø_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=wa&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')


	if call.data[:15] == '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT status FROM user where id = "+ str(call.data[15:]))
		roww = q.fetchone()[0]
		if roww == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω':
			q.execute(f"update user set status = '–ê–∫—Ç–∏–≤–µ–Ω' where id = {call.data[15:]}")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
			connection.close()

		else:
			bot.answer_callback_query(callback_query_id=call.id, text="‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

	if call.data[:14] == '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT status FROM user where id = "+ str(call.data[14:]))
		roww = q.fetchone()[0]
		if roww == '–ê–∫—Ç–∏–≤–µ–Ω':
			q.execute(f"update user set status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' where id = {call.data[14:]}")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
			connection.close()

		else:
			bot.answer_callback_query(callback_query_id=call.id, text="‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

	elif call.data == "–≤–∏–±–µ—Ä_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=vi&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data == "—é–ª–∞_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=ym&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data[:14] == '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_':
		id_sms_number = call.data[14:]
		r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getStatus&id={id_sms_number}')
		ok_number = r.text
		pracesms = 5
		if str(ok_number.split(':')[0]) == 'STATUS_OK':
			smsgoodnumber = ok_number.split(':')[1]
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT rules FROM config  where id = "+str(1))
			prace_smska = q.fetchone()
			q.execute(f"update user set balans = balans - {prace_smska[0]} where id = {call.message.chat.id}")
			connection.commit()
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getBalance')
			balance_sms = r.text
			bot.send_message(-1001147741701, f'''#–°–ú–°–ê–ö–¢–ò–í–ê–¶–ò–Ø: #{call.message.chat.id} <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a>

{balance_sms}''', parse_mode='HTML')
			bot.send_message(call.message.chat.id, f'<b>–£—Å–ø–µ—à–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è:</b> <code>{smsgoodnumber}</code>',parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–û–∂–∏–¥–∞–Ω–∏–µ —Å–º—Å")

	elif call.data[:13] == '–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_':
		id_sms_number = call.data[13:]
		r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=setStatus&status=8&id={id_sms_number}')
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–ù–æ–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")

	elif call.data[:17] == 'admin_search_user':
		msg = bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n(–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ –±–µ–∑ @)</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,searchuser)

	elif call.data == 'asdasdasdasdasd':
		msg = bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,searchuser_id)


	elif call.data == 'fead_10':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''<b>‚úîÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤:

‚ö†Ô∏è –ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤.</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,fead_10)

	elif call.data == '–ø—Ä–æ–∫—Å–∏':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ http',callback_data=f'http'))
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ socks4',callback_data=f'socks4'))
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ socks5',callback_data=f'socks5'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–∫—Å–∏:</b>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == '–∞–≤–∏—Ç–æ–∞–∫–∫':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		count_users = q.execute(f"SELECT count(id) from shopa").fetchone()[0]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'–ö—É–ø–∏—Ç—å | 15—Ä',callback_data=f'–∞–≤–∏—Ç–æ_50'))
		bot.send_message(call.message.chat.id, f'''<b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ SMS –∏ –ø–æ –ø–æ—á—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã Avito.ru –°–∏–º-–∫–∞—Ä—Ç—ã: –†–æ—Å—Å–∏—è. –ì–æ—Ä–æ–¥–∞ –∏ IP - –†–æ—Å—Å–∏—è. –§–æ—Ä–º–∞—Ç: –ª–æ–≥–∏–Ω:–ø–∞—Ä–æ–ª—å;–ò–º—è; –ø–æ—á—Ç–∞:–ø–∞—Ä–æ–ª—å . –ü–æ–∫—É–ø–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ —É–º–µ–µ—Ç –∏ –∑–Ω–∞–µ—Ç –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –∑–∞–º–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∏ –≤ –∫–∞–∫–æ–º —Å–ª—É—á–∞–µ, –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å 100% –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ –º–∞–≥–∞–∑–∏–Ω, –∫—É–ø–∏—Ç–µ 1 —à—Ç –Ω–∞ —Ç–µ—Å—Ç.</b>

<b>–û—Å—Ç–∞–ª–æ—Å—å:</b> <code>{count_users}</code>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == '–∞–≤–∏—Ç–æ_50':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(15):
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT * FROM shopa DESC LIMIT 1")
			row = q.fetchall()
			for i in row:
				bot.send_message(call.message.chat.id, f'''–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É
{i[0]}''',parse_mode='HTML', reply_markup=keyboards.main)
				bot.send_message(config.admin, f'–ü–æ–∫—É–ø–∫–∞ avito —é–∑–µ—Ä: <code>{call.message.chat.id}</code>',parse_mode='HTML')
				q.execute('DELETE FROM shopa WHERE id = '+ str(i[1]))
				connection.commit()
				q.execute("update user set balans = balans - "+str(15)+" where id = " + str(call.message.chat.id))
				connection.commit()

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == '–∫–∏–≤–∏':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		count_users = q.execute(f"SELECT count(id) from shop").fetchone()[0]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'–ö—É–ø–∏—Ç—å | 50—Ä',callback_data=f'–∫–∏–≤–∏_50'))
		bot.send_message(call.message.chat.id, f'''<b>–û–°–ù–û–í–ù–û–ô - –õ–û–ì–ò–ù:–ü–ê–†–û–õ–¨ + CARD VIZA (–Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã. –¥–∞—Ç–∞.–∫–æ–¥) + API key</b>
<b>–û—Å—Ç–∞–ª–æ—Å—å:</b> <code>{count_users}</code>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == '–∫–∏–≤–∏_50':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(50):
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT * FROM shop DESC LIMIT 1")
			row = q.fetchall()
			for i in row:
				bot.send_message(call.message.chat.id, f'''–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É
{i[0]}''',parse_mode='HTML', reply_markup=keyboards.main)
				bot.send_message(config.admin, f'–ü–æ–∫—É–ø–∫–∞ qiwi —é–∑–µ—Ä: <code>{call.message.chat.id}</code>',parse_mode='HTML')
				q.execute('DELETE FROM shop WHERE id = '+ str(i[1]))
				connection.commit()
				q.execute("update user set balans = balans - "+str(50)+" where id = " + str(call.message.chat.id))
				connection.commit()

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")


	elif call.data == '–∞–≤–∏—Ç–æ–∞–∫–∫':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ http',callback_data=f'http'))
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ socks4',callback_data=f'socks4'))
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ socks5',callback_data=f'socks5'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–∫—Å–∏:</b>''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data == 'http':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		pr1 = 'RU:http'
		pr2 = 'UA:http'
		pr3 = ':http'
		pr11 = requests.get("https://proxy1337.com/proxy.php?type=http&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=RU")
		colvo_ru = len(pr11.text.splitlines())
		pr22 = requests.get("https://proxy1337.com/proxy.php?type=http&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=UA")
		colvo_ua = len(pr22.text.splitlines())
		pr33 = requests.get("https://proxy1337.com/proxy.php?type=http&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=")
		colvo = len(pr33.text.splitlines())
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üá∑üá∫ –†–æ—Å—Å–∏—è | {colvo_ru} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr1}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ | {colvo_ua} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr2}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üåê –í–µ—Å—å –º–∏—Ä | {colvo} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr3}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ø—Ä–æ–∫—Å–∏'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:
			
üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å 1 –≤—ã–∫–∞—á–∫–∏: 10—Ä

‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å</b>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == 'socks4':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		pr1 = 'RU:socks4'
		pr2 = 'UA:socks4'
		pr3 = ':socks4'
		pr11 = requests.get("https://proxy1337.com/proxy.php?type=socks4&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=RU")
		colvo_ru = len(pr11.text.splitlines())
		pr22 = requests.get("https://proxy1337.com/proxy.php?type=socks4&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=UA")
		colvo_ua = len(pr22.text.splitlines())
		pr33 = requests.get("https://proxy1337.com/proxy.php?type=socks4&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=")
		colvo = len(pr33.text.splitlines())
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üá∑üá∫ –†–æ—Å—Å–∏—è | {colvo_ru} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr1}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ | {colvo_ua} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr2}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üåê –í–µ—Å—å –º–∏—Ä | {colvo} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr3}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ø—Ä–æ–∫—Å–∏'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:
			
üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å 1 –≤—ã–∫–∞—á–∫–∏: 10—Ä

‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å</b>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == 'socks5':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		pr1 = 'RU:socks5'
		pr2 = 'UA:socks5'
		pr3 = ':socks5'
		pr11 = requests.get("https://proxy1337.com/proxy.php?type=socks5&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=RU")
		colvo_ru = len(pr11.text.splitlines())
		pr22 = requests.get("https://proxy1337.com/proxy.php?type=socks5&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=UA")
		colvo_ua = len(pr22.text.splitlines())
		pr33 = requests.get("https://proxy1337.com/proxy.php?type=socks5&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=")
		colvo = len(pr33.text.splitlines())
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üá∑üá∫ –†–æ—Å—Å–∏—è | {colvo_ru} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr1}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ | {colvo_ua} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr2}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üåê –í–µ—Å—å –º–∏—Ä | {colvo} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr3}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ø—Ä–æ–∫—Å–∏'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:

üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å 1 –≤—ã–∫–∞—á–∫–∏: 10—Ä

‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å</b>''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:15] == '—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(10):
			keyboard = types.InlineKeyboardMarkup()
			try:
				zapros_proxy = call.data[15:]
				print(zapros_proxy.split(':')[0])
				print(zapros_proxy.split(':')[1])
				proxyyy = requests.get(f"https://proxy1337.com/proxy.php?type={zapros_proxy.split(':')[1]}&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country={zapros_proxy.split(':')[0]}")
				proxy = proxyyy.text
				doc = open(f'{call.message.chat.id}proxi_@{config.bot_name}.txt', 'w', encoding='utf8')
				doc.write(f'{proxy}\n')
				doc.close()
				doc = open(f'{call.message.chat.id}proxi_@{config.bot_name}.txt', 'rb')
				bot.send_document(call.from_user.id, doc)
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute(f"update user set balans = balans - 10 where id = {call.message.chat.id}")
				connection.commit()
				bot.send_message(call.message.chat.id, '‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É !', reply_markup=keyboards.main)
				bot.send_message(-1001147741701, f'''#–ü–û–ö–£–ü–ö–ê–ü–†–û–ö–°–ò: <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a>''', parse_mode='HTML')
			except:
				bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞', reply_markup=keyboards.main)
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', reply_markup=keyboards.main)

	elif call.data[:14] == 'game_':
		global id_user_edit
		id_user_edit = call.data[14:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, edit_prace_2)

	elif call.data[:12] == '—Å–Ω—è—Ç—å–±–∞–ª–∞–Ω—Å_':
		global id_user_edit_bal1111
		id_user_edit_bal1111 = call.data[12:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, add_money2)

	elif call.data[:15] == '–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_':
		global id_user_edit_bal1
		id_user_edit_bal1 = call.data[15:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, add_money2)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ç–æ–∫–µ–Ω_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∫–∏–≤–∏: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_token)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å–Ω–æ–º–µ—Ä_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_phone)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ü–µ–Ω–∞–ø—Ä–æ–∑–≤–æ–Ω_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_prozvon)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ü–µ–Ω–∞—Å–º—Å_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_sms)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å–ø—Ä–∏–µ–º–∞—Å–º—Å':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_sms_ppp)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å_api_prozvon':
		msg = bot.send_message(call.message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:\n\n–ò–î –ö–ê–ú–ü–ê–ù–ò–ô\n–ê–ü–ò –ö–ê–ú–ü–ê–ù–ò–ô</b>',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_apii)

	elif call.data == "–ø–æ–ª—É—á–∏—Ç—å_—Ç–æ–∫–µ–Ω_–∞–ø–∏":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= float(14000):
			chars = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
			number = 1
			length = 25
			for n in range(number):
				token =''
				for i in range(length):
					token += random.choice(chars)
					print(token)
					q.execute(f"update user set api_token = {token} where id = {call.message.chat.id}")
					connection.commit()
					q.execute(f"update user set balans = balans - 14000 where id = {call.message.chat.id}")
					connection.commit()
					bot.send_message(call.message.chat.id, '–£—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–Ω–æ ! ')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')


	elif call.data == 'newgame':
		msg = bot.send_message(call.message.chat.id, 'üíµ –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∏–≥—Ä—ã:',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, newgame)

	elif call.data[:5] == 'game_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		idgame = call.data[5:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
		bank = q.fetchone()
		q = q.execute("SELECT protivnik FROM game WHERE id = "+str(idgame))
		protivnik = q.fetchone()
		q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
		summa = q.fetchone()
		q = q.execute("SELECT status FROM game WHERE id = "+str(idgame))
		statusgame = q.fetchone()
		q = q.execute("SELECT balance FROM user WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(statusgame[0]) == float(1):
			if float(protivnik[0]) <= float(1):
				if float(check_balans[0]) >= float(summa[0]):
					if float(bank[0]) != float(call.message.chat.id):
						q.execute(f"update game set status = '0' where id = {idgame}")
						connection.commit()
						q.execute(f"update game set protivnik = '{call.message.chat.id}' where id = {idgame}")
						connection.commit()
						q.execute(f"update user set balance = balance - '{summa[0]}' where id = '{call.message.chat.id}'")
						connection.commit()

						card = ['2', '3', '4', '10', '7', '8', '9', '11']
						card1 = random.choice(card)
						card2 = random.choice(card)
						q.execute(f"update game set k{card1} = k{card1} - '1' where id = '{idgame}'")
						connection.commit()
						q.execute(f"update game set k{card2} = k{card2} - '1' where id = '{idgame}'")
						connection.commit()
						q.execute(f"update game set bank_colvo = bank_colvo + '1' where id = '{idgame}'")
						connection.commit()
						q.execute(f"update game set protivnik_colvo = protivnik_colvo + '1' where id = '{idgame}'")
						connection.commit()
						q.execute(f"update game set bank_summa = bank_summa + '{card1}' where id = '{idgame}'")
						connection.commit()
						q.execute(f"update game set protivnik_summa = protivnik_summa + '{card2}' where id = '{idgame}'")
						connection.commit()
						q = q.execute("SELECT protivnik_colvo FROM game WHERE id = "+str(idgame))
						protivnik_colvo = q.fetchone()
						q = q.execute("SELECT protivnik_summa FROM game WHERE id = "+str(idgame))
						protivnik_summa = q.fetchone()
						q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
						game_summa = q.fetchone()


						keyboard = types.InlineKeyboardMarkup()
						keyboard.add(types.InlineKeyboardButton(text=f'‚ûï –í–∑—è—Ç—å –µ—â–µ –∫–∞—Ä—Ç—É',callback_data=f'addcard_{idgame}'))
						keyboard.add(types.InlineKeyboardButton(text=f'‚úîÔ∏è –•–≤–∞—Ç–∏—Ç, –ø—É—Å—Ç—å –∏–≥—Ä–∞–µ—Ç',callback_data=f'goodcard_{idgame}'))
						bot.send_message(call.message.chat.id, f'''‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ ‚Ññ <code>{idgame}</code> –Ω–∞ —Å—É–º–º—É <code>{game_summa[0]}</code>''',parse_mode='HTML')
						bot.send_message(bank[0], f'''‚úÖ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ ‚Ññ <code>{idgame}</code> –Ω–∞ —Å—É–º–º—É <code>{game_summa[0]}</code>—Ä , –æ–∂–∏–¥–∞–π—Ç–µ —Å–≤–æ–π —Ö–æ–¥. ''',parse_mode='HTML')
						bot.send_message(call.message.chat.id, f'''‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç: {protivnik_colvo[0]}


		üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤: {protivnik_summa[0]}''',parse_mode='HTML', reply_markup=keyboard)
					else:
						bot.send_message(call.message.chat.id, '‚ö† –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —Å–≤–æ—é –∏–≥—Ä—É', reply_markup=keyboards.main)
				else:
					bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', reply_markup=keyboards.main)
			else:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='‚ôªÔ∏è –û–±–Ω–æ–≤–∏—Ç—å',callback_data='–æ–±–Ω–æ–≤–∏—Ç—å'))
				bot.send_message(call.message.chat.id, '‚ö† –ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç', reply_markup=keyboard)
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚ôªÔ∏è –û–±–Ω–æ–≤–∏—Ç—å',callback_data='–æ–±–Ω–æ–≤–∏—Ç—å'))
			bot.send_message(call.message.chat.id, '‚ö† –ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç', reply_markup=keyboard)
						
	elif call.data[:8] == 'addcard_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		idgame = call.data[8:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		card = ['2', '3', '4', '10', '7', '8', '9', '11']
		card1 = random.choice(card)
		q.execute(f"update game set k{card1} = k{card1} - '1' where id = '{idgame}'")
		connection.commit()
		
		q.execute(f"update game set protivnik_summa = protivnik_summa + '{card1}' where id = '{idgame}'")
		connection.commit()
		q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
		bank = q.fetchone()
		q = q.execute("SELECT protivnik_colvo FROM game WHERE id = "+str(idgame))
		protivnik_colvo = q.fetchone()
		q = q.execute("SELECT rezultat FROM game WHERE id = "+str(idgame))
		rezultat = q.fetchone()
		q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
		bank = q.fetchone()
		q = q.execute("SELECT protivnik_summa FROM game WHERE id = "+str(idgame))
		protivnik_summa = q.fetchone()
		if float(rezultat[0]) != float(2):

			if float(protivnik_summa[0]) <= float(21):
				if float(protivnik_summa[0]) == float(21):
					q.execute(f"update game set protivnik_colvo = protivnik_colvo + '1' where id = '{idgame}'")
					connection.commit()
					q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
					summa = q.fetchone()
					summawin = int(summa[0]) * int(2)
					dohod = int(summawin) / 100 * 4
					summawin = int(summawin) - int(dohod)
					q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
					bank = q.fetchone()
					q.execute(f"update user set balance = balance + '{summawin}' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update game set rezultat = rezultat + '2' where id = '{idgame}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{bank[0]}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set win = win + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set luls = luls + '1' where id = '{bank[0]}'")
					connection.commit()
					bot.send_message(bank[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'üéâ –ü–æ–±–µ–¥–∞ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.id}</a>',parse_mode='HTML', reply_markup=keyboards.main)
					bot.send_message(bank[0], f'üò°  –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {summawin}—Ä  —Ç–∫ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –Ω–∞–±—Ä–∞–ª 21',parse_mode='HTML', reply_markup=keyboards.main)
					
				else:
					q.execute(f"update game set protivnik_colvo = protivnik_colvo + '1' where id = '{idgame}'")
					connection.commit()
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text=f'‚ûï –í–∑—è—Ç—å –µ—â–µ –∫–∞—Ä—Ç—É',callback_data=f'addcard_{idgame}'))
					keyboard.add(types.InlineKeyboardButton(text=f'‚úîÔ∏è –•–≤–∞—Ç–∏—Ç, –ø—É—Å—Ç—å –∏–≥—Ä–∞–µ—Ç',callback_data=f'goodcard_{idgame}'))
					bot.send_message(bank[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'''‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç: {protivnik_colvo[0]}


	üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤: {protivnik_summa[0]}''',parse_mode='HTML', reply_markup=keyboard)
			else:
				if protivnik_colvo[0] == '1' and card1 == '11':
					q.execute(f"update game set protivnik_colvo = protivnik_colvo + '1' where id = '{idgame}'")
					connection.commit()
					q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
					summa = q.fetchone()
					summawin = int(summa[0]) * int(2)
					dohod = int(summawin) / 100 * 4
					summawin = int(summawin) - int(dohod)
					q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
					bank = q.fetchone()
					q.execute(f"update user set balance = balance + '{summawin}' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update game set rezultat = rezultat + '2' where id = '{idgame}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{bank[0]}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set win = win + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set luls = luls + '1' where id = '{bank[0]}'")
					connection.commit()
					bot.send_message(bank[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'üò° –ü–æ–±–µ–¥–∞ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.id}</a>',parse_mode='HTML', reply_markup=keyboards.main)
					bot.send_message(bank[0], f'üéâ  –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {summawin}—Ä  —Ç–∫ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –Ω–∞–±—Ä–∞–ª –∑–æ–ª–æ—Ç–æ–∏ —Å–µ—Ç',parse_mode='HTML', reply_markup=keyboards.main)
				else:	

					q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
					summa = q.fetchone()
					summawin = int(summa[0]) * int(2)
					dohod = int(summawin) / 100 * 4
					summawin = int(summawin) - int(dohod)
					q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
					bank = q.fetchone()
					q.execute(f"update user set balance = balance + '{summawin}' where id = '{bank[0]}'")
					connection.commit()

					q.execute(f"update game set rezultat = rezultat + '2' where id = '{idgame}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{bank[0]}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set win = win + '1' where id = '{bank[0]}'")
					connection.commit()
					q.execute(f"update user set luls = luls + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					bot.send_message(bank[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'üò° –ü–µ—Ä–µ–±–æ—Ä –∏ –ø–æ–±–µ–¥–∞ <a href="tg://user?id={bank[0]}">{bank[0]}</a>',parse_mode='HTML', reply_markup=keyboards.main)
					bot.send_message(bank[0], f'üéâ  –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {summawin}—Ä  —Ç–∫ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –ø–µ—Ä–µ–±—Ä–∞–ª –æ—á–∫–æ–≤',parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.send_message(call.message.chat.id, f'C–æ—Å–∞—Ç—å',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data[:9] == 'goodcard_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		idgame = call.data[9:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
		bank = q.fetchone()
		q = q.execute("SELECT protivnik_colvo FROM game WHERE id = "+str(idgame))
		protivnik_colvo = q.fetchone()
		q = q.execute("SELECT bank_colvo FROM game WHERE id = "+str(idgame))
		bank_colvo = q.fetchone()
		q = q.execute("SELECT bank_summa FROM game WHERE id = "+str(idgame))
		bank_summa = q.fetchone()
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'‚ûï –í–∑—è—Ç—å –µ—â–µ –∫–∞—Ä—Ç—É',callback_data=f'addcardb_{idgame}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚úîÔ∏è –•–≤–∞—Ç–∏—Ç, –≤—Å–∫—Ä—ã–≤–∞–µ–º—Å—è',callback_data=f'goodcardb_{idgame}'))
		bot.send_message(call.message.chat.id, f'''‚úÖ –í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∏–≥—Ä—É, —Ç–µ–ø–µ—Ä—å –∏–≥—Ä–∞–µ—Ç <a href="tg://user?id={bank[0]}">{bank[0]}</a> –æ–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. ''',parse_mode='HTML')
		bot.send_message(bank[0], f'''‚úîÔ∏è <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –∑–∞–∫–æ–Ω—á–∏–ª –∏–≥—Ä–∞—Ç—å –∏ —É –Ω–µ–≥–æ {protivnik_colvo[0]} –∫–∞—Ä—Ç, –±–∞–Ω–∫—É–π''',parse_mode='HTML')
		bot.send_message(bank[0], f'''‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç: {bank_colvo[0]}


üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤: {bank_summa[0]}''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data[:9] == 'addcardb_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		idgame = call.data[9:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		card = ['2', '3', '4', '10', '7', '8', '9', '11']
		card1 = random.choice(card)
		q.execute(f"update game set k{card1} = k{card1} - '1' where id = '{idgame}'")
		connection.commit()

		q.execute(f"update game set bank_summa = bank_summa + '{card1}' where id = '{idgame}'")
		connection.commit()

		q = q.execute("SELECT protivnik FROM game WHERE id = "+str(idgame))
		protivnik = q.fetchone()
		q = q.execute("SELECT bank_colvo FROM game WHERE id = "+str(idgame))
		bank_colvo = q.fetchone()
		q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
		bank = q.fetchone()
		q = q.execute("SELECT bank_summa FROM game WHERE id = "+str(idgame))
		bank_summa = q.fetchone()
		q = q.execute("SELECT rezultat FROM game WHERE id = "+str(idgame))
		rezultat = q.fetchone()
		if float(rezultat[0]) != float(2):

			if float(bank_summa[0]) <= float(21):
					q.execute(f"update game set bank_colvo = bank_colvo + '1' where id = '{idgame}'")
					connection.commit()
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text=f'‚ûï –í–∑—è—Ç—å –µ—â–µ –∫–∞—Ä—Ç—É',callback_data=f'addcardb_{idgame}'))
					keyboard.add(types.InlineKeyboardButton(text=f'‚úîÔ∏è –•–≤–∞—Ç–∏—Ç, –≤—Å–∫—Ä—ã–≤–∞–µ–º—Å—è',callback_data=f'goodcardb_{idgame}'))
					bot.send_message(protivnik[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'''‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç: {bank_colvo[0]}


	üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤: {bank_summa[0]}''',parse_mode='HTML', reply_markup=keyboard)

			else:
				if bank_colvo[0] == '1' and card1 == '11':
					q.execute(f"update game set bank_colvo = bank_colvo + '1' where id = '{idgame}'")
					connection.commit()
					q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
					summa = q.fetchone()
					summawin = int(summa[0]) * int(2)
					dohod = int(summawin) / 100 * 4
					summawin = int(summawin) - int(dohod)
					q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
					bank = q.fetchone()
					q.execute(f"update user set balance = balance + '{summawin}' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update game set rezultat = rezultat + '2' where id = '{idgame}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{bank[0]}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set win = win + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set luls = luls + '1' where id = '{bank[0]}'")
					connection.commit()
					bot.send_message(bank[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'üò° –ü–æ–±–µ–¥–∞ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.id}</a>',parse_mode='HTML', reply_markup=keyboards.main)
					bot.send_message(protivnik[0], f'üéâ  –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {summawin}—Ä  —Ç–∫ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –Ω–∞–±—Ä–∞–ª –∑–æ–ª–æ—Ç–æ–∏ —Å–µ—Ç',parse_mode='HTML', reply_markup=keyboards.main)
				else:	

					q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
					summa = q.fetchone()
					q = q.execute("SELECT protivnik FROM game WHERE id = "+str(idgame))
					protivnik = q.fetchone()
					summawin = int(summa[0]) * int(2)
					dohod = int(summawin) / 100 * 4
					summawin = int(summawin) - int(dohod)
					q.execute(f"update user set balance = balance + '{summawin}' where id = '{protivnik[0]}'")
					connection.commit()
					q.execute(f"update game set rezultat = rezultat + '2' where id = '{idgame}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					q.execute(f"update user set game = game + '1' where id = '{protivnik[0]}'")
					connection.commit()
					q.execute(f"update user set win = win + '1' where id = '{protivnik[0]}'")
					connection.commit()
					q.execute(f"update user set luls = luls + '1' where id = '{call.message.chat.id}'")
					connection.commit()
					bot.send_message(protivnik[0], f'''üÉè <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –≤–∑—è–ª(–∞) –∫–∞—Ä—Ç—É. ''',parse_mode='HTML')
					bot.send_message(call.message.chat.id, f'üò° –ü–µ—Ä–µ–±–æ—Ä –∏ –ø–æ–±–µ–¥–∞ <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>',parse_mode='HTML', reply_markup=keyboards.main)
					bot.send_message(protivnik[0], f'üéâ  –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {summawin}—Ä  —Ç–∫ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –ø–µ—Ä–µ–±—Ä–∞–ª –æ—á–∫–æ–≤',parse_mode='HTML', reply_markup=keyboards.main)
		else:		
			bot.send_message(call.message.chat.id, f'C–æ—Å–∞—Ç—å',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data[:10] == 'goodcardb_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		idgame = call.data[10:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT protivnik_summa FROM game WHERE id = "+str(idgame))
		protivnik_summa = q.fetchone()
		q.execute(f"update game set rezultat = rezultat + '2' where id = '{idgame}'")
		connection.commit()
		q = q.execute("SELECT bank_summa FROM game WHERE id = "+str(idgame))
		bank_summa = q.fetchone()
		q = q.execute("SELECT bank FROM game WHERE id = "+str(idgame))
		bank = q.fetchone()
		q = q.execute("SELECT protivnik FROM game WHERE id = "+str(idgame))
		protivnik = q.fetchone()
		q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
		summa = q.fetchone()
		summawin = int(summa[0]) * int(2)
		dohod = int(summawin) / 100 * 4
		summawin = int(summawin) - int(dohod)
		if float(bank_summa[0]) >= float(protivnik_summa[0]):
			bot.send_message(protivnik[0], f'''
‚öîÔ∏è <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>: {protivnik_summa[0]}  VS <a href="tg://user?id={bank[0]}">{bank[0]}</a>: {bank_summa[0]}

üéâ  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:  <a href="tg://user?id={bank[0]}">{bank[0]}</a> –≤—ã–∏–≥—Ä–∞–ª: {summawin}—Ä''',parse_mode='HTML', reply_markup=keyboards.main)
			bot.send_message(bank[0], f'''
‚öîÔ∏è <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>: {protivnik_summa[0]}  VS <a href="tg://user?id={bank[0]}">{bank[0]}</a>: {bank_summa[0]}

üéâ  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:  <a href="tg://user?id={bank[0]}">{bank[0]}</a> –≤—ã–∏–≥—Ä–∞–ª: {summawin}—Ä''',parse_mode='HTML', reply_markup=keyboards.main)
			q.execute(f"update user set balance = balance + '{summawin}' where id = '{bank[0]}'")
			connection.commit()
			q.execute(f"update user set game = game + '1' where id = '{bank[0]}'")
			connection.commit()
			q.execute(f"update user set game = game + '1' where id = '{protivnik[0]}'")
			connection.commit()
			q.execute(f"update user set win = win + '1' where id = '{bank[0]}'")
			connection.commit()
			q.execute(f"update user set luls = luls + '1' where id = '{protivnik[0]}'")
			connection.commit()
			bot2.send_message(-1001386797138, f'''
‚öîÔ∏è <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>: {protivnik_summa[0]}  VS <a href="tg://user?id={bank[0]}">{bank[0]}</a>: {bank_summa[0]}

üéâ  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:  <a href="tg://user?id={bank[0]}">{bank[0]}</a> –≤—ã–∏–≥—Ä–∞–ª: {summawin}—Ä''',parse_mode='HTML')
			


		else:
			bot.send_message(protivnik[0], f'''
‚öîÔ∏è <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>: {protivnik_summa[0]}  VS <a href="tg://user?id={bank[0]}">{bank[0]}</a>: {bank_summa[0]}

üéâ  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:  <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a> –≤—ã–∏–≥—Ä–∞–ª: {summawin}—Ä''',parse_mode='HTML', reply_markup=keyboards.main)
			bot.send_message(bank[0], f'''
‚öîÔ∏è <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>: {protivnik_summa[0]}  VS <a href="tg://user?id={bank[0]}">{bank[0]}</a>: {bank_summa[0]}

üéâ  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:  <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a> –≤—ã–∏–≥—Ä–∞–ª: {summawin}—Ä''',parse_mode='HTML', reply_markup=keyboards.main)
			q.execute(f"update user set balance = balance + '{summawin}' where id = '{protivnik[0]}'")
			connection.commit()
			q.execute(f"update user set game = game + '1' where id = '{protivnik[0]}'")
			connection.commit()
			q.execute(f"update user set game = game + '1' where id = '{bank[0]}'")
			connection.commit()
			q.execute(f"update user set win = win + '1' where id = '{protivnik[0]}'")
			connection.commit()
			q.execute(f"update user set luls = luls + '1' where id = '{bank[0]}'")
			connection.commit()
			bot2.send_message(-1001386797138, f'''
‚öîÔ∏è <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a>: {protivnik_summa[0]}  VS <a href="tg://user?id={bank[0]}">{bank[0]}</a>: {bank_summa[0]}

üéâ  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:  <a href="tg://user?id={protivnik[0]}">{protivnik[0]}</a> –≤—ã–∏–≥—Ä–∞–ª: {summawin}—Ä''',parse_mode='HTML')

	elif call.data == "–≤—ã–≤–æ–¥–±–∞–ª–∞–Ω—Å–∞":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='ü•ù QIWI',callback_data=f'QIWI'))
		keyboard.add(types.InlineKeyboardButton(text='üéÅ BTC –ß–ï–ö',callback_data=f'–ë–¢–ö–ß–ï–ö'))
		bot.send_message(call.message.chat.id, "<b>üì§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É:</b>",parse_mode='HTML', reply_markup=keyboard)
	
	elif call.data == "QIWI":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>üì§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Qiwi –ö–æ—à–µ–ª–µ–∫ (–ë–µ–∑ +):</b>",parse_mode='HTML')
		bot.register_next_step_handler(msg, qiwi_viplata11111)

	elif call.data == "–ë–¢–ö–ß–ï–ö":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>üì§ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–ú–ò–ù–ò–ú–£–ú 400–†):</b>",parse_mode='HTML')
		bot.register_next_step_handler(msg, qiwi_viplata)

	elif call.data[:8] == '–≤—ã–ø–ª–∞—Ç–∞_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		global idviplata
		idviplata = call.data[8:]
		msg = bot.send_message(call.message.chat.id, "<b>üì§ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫:</b>",parse_mode='HTML')
		bot.register_next_step_handler(msg, idviplatauser)

	elif call.data == "–æ–±–Ω–æ–≤–∏—Ç—å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT * FROM game where status = '1'")
		row = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in row:
			keyboard.add(types.InlineKeyboardButton(text=f'üîπ #Game_{i[0]} | –°—É–º–º–∞ {i[1]}—Ä',callback_data=f'game_{i[0]}'))
		keyboard.add(types.InlineKeyboardButton(text='üóÇ –ú–æ–∏ –∏–≥—Ä—ã',callback_data='–º–æ–∏–∏–≥—Ä—ã'),types.InlineKeyboardButton(text='‚ôªÔ∏è –û–±–Ω–æ–≤–∏—Ç—å',callback_data='–æ–±–Ω–æ–≤–∏—Ç—å'))
		keyboard.add(types.InlineKeyboardButton(text='‚úîÔ∏è –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É',callback_data='newgame'))
		bot.send_message(call.message.chat.id, f'''‚ôªÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:''' ,parse_mode='HTML', reply_markup=keyboard)

	elif call.data == "–º–æ–∏–∏–≥—Ä—ã":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM game where status = '1' and bank = '{call.message.chat.id}'")
		row = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in row:
			keyboard.add(types.InlineKeyboardButton(text=f'–°—É–º–º–∞ {i[1]}—Ä | ‚ùå –û—Ç–º–µ–Ω–∞',callback_data=f'–æ—Ç–º–µ–Ω–∞–∏–≥—Ä—ã_{i[0]}'))
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data='–æ–±–Ω–æ–≤–∏—Ç—å'))
		doc = open('mygame.jpg', 'rb')
		bot.send_photo(call.message.chat.id,doc, f'''‚ôªÔ∏è –í–∞—à–∏ –∏–≥—Ä—ã:''' ,parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:11] == '–æ—Ç–º–µ–Ω–∞–∏–≥—Ä—ã_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		idgame = call.data[11:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT status FROM game WHERE id = "+str(idgame))
		status = q.fetchone()
		if status[0] != '0':
			q = q.execute("SELECT summa FROM game WHERE id = "+str(idgame))
			summa = q.fetchone()
			q.execute(f"update user set balance = balance + '{summa[0]}' where id = '{call.message.chat.id}'")
			connection.commit()
			q.execute(f"update game set status = '0' where id = {idgame}")
			connection.commit()
			bot.send_message(call.message.chat.id, f'''‚ùå –û—Ç–º–µ–Ω–∏–ª–∏''' ,parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.send_message(call.message.chat.id, f'''‚ùå –ò–≥—Ä—É –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è''' ,parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data == "–Ω–∞–∑–∞–¥–∏–Ω—Ñ–æ":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		balans_users = q.execute("select sum(game) from user").fetchone()[0]
		game_summas = q.execute("select sum(summa) from game").fetchone()[0]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üèÜ –¢–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤',callback_data='—Ç–æ–ø–∏–≥—Ä—ã'))
		keyboard.add(types.InlineKeyboardButton(text=f'üí¨ –ß–∞—Ç',url='https://t.me/g21chat'),types.InlineKeyboardButton(text=f'üîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞',url=f'https://t.me/G21ROBOT_SUPPORT'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –õ–æ–≥–∏',url='https://t.me/G21LOG'),types.InlineKeyboardButton(text=f'üí∏ –í—ã–ø–ª–∞—Ç—ã',url='https://t.me/joinchat/AAAAAEkD4du-oepTVNDRjA'))
		doc = open('info.jpg', 'rb')
		bot.send_photo(call.message.chat.id,doc, f'''–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—ã–≥—Ä–∞–ª–∏ {balans_users} –∏–≥—Ä –Ω–∞ —Å—É–º–º—É {game_summas} —Ä—É–±–ª–µ–π.''' ,parse_mode='HTML', reply_markup=keyboard)


	elif call.data == "—Ç–æ–ø–∏–≥—Ä—ã":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		ids = []
		game = []
		win = []
		luls = []
		connection = sqlite3.connect('database.sqlite')
		with connection:
			cur = connection.cursor()
			keyboard = types.InlineKeyboardMarkup()
			cur.execute("SELECT * FROM user ORDER BY game DESC")
			row = cur.fetchall()
			for i in row:
					game.append(i[5])
					ids.append(i[0])
					win.append(i[4])
					luls.append(i[6])
			x = 0
			for ro,ror,rooo,roooo  in zip(ids,game,win,luls):
				x += 1
				if x <= 10:
					userid = ro
					UsrInfo = bot.get_chat_member(userid, userid).user
					keyboard.add(types.InlineKeyboardButton(text = f'‚ÑπÔ∏è {str(UsrInfo.first_name)} |üïπ {str(ror)} |üèÜ {str(rooo)} |‚òπÔ∏è {str(roooo)}', url = f"t.me/{str(UsrInfo.username)}"))
		keyboard.add(types.InlineKeyboardButton(text = f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = f"–Ω–∞–∑–∞–¥–∏–Ω—Ñ–æ"))			
		doc = open('topgame.jpg', 'rb')
		bot.send_photo(call.message.chat.id,doc, "‚ÑπÔ∏è –ò–º—è |üïπ –ò–≥—Ä—ã |üèÜ –ü–æ–±–µ–¥—ã |‚òπÔ∏è –ü—Ä–æ–∏–≥—Ä—ã—à–∏ ", reply_markup = keyboard)

	elif call.data[:13] == '–∏–∑–º–µ–Ω–∏—Ç—å–±–∞–Ω–∫_':
		global idgames
		idgames = call.data[13:]
		msg = bot.send_message(call.message.chat.id, "<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:</b>",parse_mode='HTML')
		bot.register_next_step_handler(msg, editgame)

	elif call.data[:18] == '–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫_':
		global idgames1
		idgames1 = call.data[18:]
		msg = bot.send_message(call.message.chat.id, "<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:</b>",parse_mode='HTML')
		bot.register_next_step_handler(msg, editgames)

	elif call.data[:10] == '–≤—ã–ø–ª–∞—Ç–∏—Ç—å_':
		idviplataaa = call.data[10:]
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM viplata where id = '{idviplataaa}'")
		row = q.fetchone()
		if row != None:
			api = Qiwi('', '')
			account = f"{row[3]}"
			amount = f'{row[1]}'
			comment = f"–í—ã–ø–ª–∞—Ç–∞ @G21ROBOT | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{row[2]}"
			response = api.pay(account, amount, comment)
			bot.send_message(1031811029, response)
			bot.send_message(row[2], 'üí∏ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª,–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ QIWI')
			#q.execute("delete from viplata WHERE id = " + str(idviplataaa))
			#connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞")

while True:				
	try:
		bot.polling(True)
	except Exception as ex:
		bot.send_message(1031811029, f'–ü–æ—è–≤–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞: \n\n' +  str(ex))
		time.sleep(0.1)
